steps:

  # 0. CloudBuild 경로 확인
  - name: 'alpine'
    args: ['sh', '-c', 'ls -l ']


  # 1. 도커 이미지 빌드
  - name: 'gcr.io/cloud-builders/docker'
    id : 'build'
    args: [
      'build',   
      '-t', 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/$REPO_NAME/cloudbuild-test:$SHORT_SHA', 'CloudBuild/']
    
  # 2. Prisma Cloud Image Scan
  - name: 'gcr.io/cloud-builders/docker'
    id : 'Scan'
    args: 
    - 'run'
    - '--rm'
    - '-v'
    - '/var/run/docker.sock:/var/run/docker.sock'
    - 'asia-northeast3-docker.pkg.dev/flash-physics-368407/twistlock/twistlock:latest'
    - 'images'
    - 'scan'
    - '--address'
    - 'https://asia-northeast1.cloud.twistlock.com/japan-1167212692'
    - '--user'
    - '$$prismacloud-user'
    - '--password'
    - '$$prismacloud-password'
    - '--details'
    - 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/$REPO_NAME/cloudbuild-test:$SHORT_SHA'
    
    secretEnv : ['prismacloud-user', 'prismacloud-password']
   

  # 2. Artifact Registry에 푸시하는 단계
  - name: 'gcr.io/cloud-builders/docker'
    id : 'push'
    args: [ 'push', 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/$REPO_NAME/cloudbuild-test:$SHORT_SHA' ]
    
            
  # 3. Cloud Run 동작
  - name: 'gcr.io/cloud-builders/gcloud'
    id : 'Deploy'
    args:
      - 'run'
      - 'deploy'
      - 'cloudrun-test-ljw'
      - '--image'
      - 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/$REPO_NAME/cloudbuild-test:$SHORT_SHA'
      - '--region'
      - 'asia-northeast3'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'


options:
  logging: CLOUD_LOGGING_ONLY

availableSecrets:
  secretManager:
  - versionName: projects/843668447202/secrets/prismacloud-user/versions/latest
    env: 'prismacloud-user'
  - versionName: projects/843668447202/secrets/prismacloud-password/versions/latest
    env: 'prismacloud-password'